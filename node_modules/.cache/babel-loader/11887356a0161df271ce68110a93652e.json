{"ast":null,"code":"var _jsxFileName = \"/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImageContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { saveImage, removeImage } from '../../actions/imageActions';\nimport ShowImage from './ShowImage';\nimport ImageFilters from './ImageFilters';\n\nclass ImageContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSave = () => {\n      this.props.saveImage(this.state.imageId, this.state.selectedImageFilter);\n    };\n\n    this.handleRemove = () => {\n      this.props.removeImage(this.props.match.params.id, this.props.user.id, this.props.history);\n    };\n\n    this.handleFilterChange = e => {\n      const filter = e.target.value;\n      this.setState({\n        selectedImageFilter: filter === \"none\" ? null : filter\n      });\n    };\n\n    this.state = {\n      image: props.images.find(image => image.id === this.props.match.params.id),\n      selectedImageFilter: null\n    };\n  }\n\n  render() {\n    let image = this.props.images.filter(image => image.id.toString() === this.state.imageId)[0];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(ShowImage, {\n      image: image,\n      selectedImageFilter: this.state.selectedImageFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(ImageFilters, {\n      handleFilterChange: this.handleFilterChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: handleSave => this.handleSave(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Save Image\"), React.createElement(\"button\", {\n      onClick: handleRemove => this.handleRemove(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Remove Image\"));\n  }\n\n}\n\n;\nexport default connect(state => ({\n  images: state.imagesReducer.images,\n  user: state.loginReducer.user\n}), {\n  saveImage,\n  removeImage\n})(ImageContainer);","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImageContainer.js"],"names":["React","Component","connect","saveImage","removeImage","ShowImage","ImageFilters","ImageContainer","constructor","props","handleSave","state","imageId","selectedImageFilter","handleRemove","match","params","id","user","history","handleFilterChange","e","filter","target","value","setState","image","images","find","render","toString","imagesReducer","loginReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,4BAAvC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,cAAN,SAA6BN,SAA7B,CAAuC;AACrCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,UARmB,GAQN,MAAM;AACjB,WAAKD,KAAL,CAAWN,SAAX,CAAqB,KAAKQ,KAAL,CAAWC,OAAhC,EAAyC,KAAKD,KAAL,CAAWE,mBAApD;AACD,KAVkB;;AAAA,SAYnBC,YAZmB,GAYJ,MAAM;AACnB,WAAKL,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C,EAAmD,KAAKR,KAAL,CAAWS,IAAX,CAAgBD,EAAnE,EAAuE,KAAKR,KAAL,CAAWU,OAAlF;AACD,KAdkB;;AAAA,SAgBnBC,kBAhBmB,GAgBGC,CAAD,IAAO;AAC1B,YAAMC,MAAM,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAxB;AACA,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,mBAAmB,EAAES,MAAM,KAAK,MAAX,GAAoB,IAApB,GAA2BA;AAAlD,OAAd;AACD,KAnBkB;;AAEjB,SAAKX,KAAL,GAAa;AACXe,MAAAA,KAAK,EAAEjB,KAAK,CAACkB,MAAN,CAAaC,IAAb,CAAkBF,KAAK,IAAIA,KAAK,CAACT,EAAN,KAAa,KAAKR,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBC,EAAhE,CADI;AAEXJ,MAAAA,mBAAmB,EAAE;AAFV,KAAb;AAID;;AAeDgB,EAAAA,MAAM,GAAG;AACP,QAAIH,KAAK,GAAG,KAAKjB,KAAL,CAAWkB,MAAX,CAAkBL,MAAlB,CAAyBI,KAAK,IAAIA,KAAK,CAACT,EAAN,CAASa,QAAT,OAAwB,KAAKnB,KAAL,CAAWC,OAArE,EAA8E,CAA9E,CAAZ;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEc,KAAlB;AAAyB,MAAA,mBAAmB,EAAE,KAAKf,KAAL,CAAWE,mBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,YAAD;AAAc,MAAA,kBAAkB,EAAE,KAAKO,kBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,OAAO,EAAEV,UAAU,IAAI,KAAKA,UAAL,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE;AAAQ,MAAA,OAAO,EAAEI,YAAY,IAAI,KAAKA,YAAL,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,CADF;AAQD;;AAhCoC;;AAiCtC;AAED,eAAeZ,OAAO,CACpBS,KAAK,KAAK;AACRgB,EAAAA,MAAM,EAAEhB,KAAK,CAACoB,aAAN,CAAoBJ,MADpB;AAERT,EAAAA,IAAI,EAAEP,KAAK,CAACqB,YAAN,CAAmBd;AAFjB,CAAL,CADe,EAKpB;AAAEf,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CALoB,CAAP,CAKeG,cALf,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { saveImage, removeImage } from '../../actions/imageActions';\nimport ShowImage from './ShowImage';\nimport ImageFilters from './ImageFilters';\n\nclass ImageContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: props.images.find(image => image.id === this.props.match.params.id),\n      selectedImageFilter: null\n    };\n  };\n\n  handleSave = () => {\n    this.props.saveImage(this.state.imageId, this.state.selectedImageFilter)\n  }\n\n  handleRemove = () => {\n    this.props.removeImage(this.props.match.params.id, this.props.user.id, this.props.history)\n  }\n\n  handleFilterChange = (e) => {\n    const filter = e.target.value\n    this.setState({ selectedImageFilter: filter === \"none\" ? null : filter });\n  }\n\n  render() {\n    let image = this.props.images.filter(image => image.id.toString() === this.state.imageId)[0]\n    return (\n      <div>\n        <ShowImage image={image} selectedImageFilter={this.state.selectedImageFilter} />\n        <ImageFilters handleFilterChange={this.handleFilterChange} />\n        <button onClick={handleSave => this.handleSave()}>Save Image</button>\n        <button onClick={handleRemove => this.handleRemove()}>Remove Image</button>\n      </div>\n    );\n  }\n};\n\nexport default connect(\n  state => ({\n    images: state.imagesReducer.images,\n    user: state.loginReducer.user\n  }),\n  { saveImage, removeImage })(ImageContainer);\n"]},"metadata":{},"sourceType":"module"}