{"ast":null,"code":"const baseURL = 'http://localhost:3000';\nconst usersURL = '/users';\nconst headers = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json'\n};\nexport const login = (user, history) => {\n  return dispatch => {\n    fetch(baseURL + usersURL, {\n      mode: 'cors',\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify({\n        user\n      })\n    }).then(response => response.json()).then(user => {\n      dispatch({\n        type: 'GET_USER',\n        user\n      });\n      return user;\n    }).then(user => {\n      if (user.result === undefined) {\n        dispatch({\n          type: 'LOGGED_IN'\n        });\n        history.push(\"/images/\".concat(user.id));\n      } else {\n        dispatch({\n          type: 'LOGIN_ERROR',\n          error: user.user\n        });\n      }\n    });\n  };\n};\nexport const logout = (user, images) => {\n  return dispatch => {\n    dispatch({\n      type: 'LOG_OUT',\n      user,\n      images\n    });\n  };\n};","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/actions/loginActions.js"],"names":["baseURL","usersURL","headers","login","user","history","dispatch","fetch","mode","method","body","JSON","stringify","then","response","json","type","result","undefined","push","id","error","logout","images"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAhB;AACA,MAAMC,QAAQ,GAAG,QAAjB;AACA,MAAMC,OAAO,GAAG;AACd,YAAU,kBADI;AAEd,kBAAgB;AAFF,CAAhB;AAKA,OAAO,MAAMC,KAAK,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACtC,SAAQC,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAACP,OAAO,GAAGC,QAAX,EAAsB;AACzBO,MAAAA,IAAI,EAAE,MADmB;AAEzBC,MAAAA,MAAM,EAAE,MAFiB;AAGzBP,MAAAA,OAAO,EAAEA,OAHgB;AAIzBQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBR,QAAAA;AADmB,OAAf;AAJmB,KAAtB,CAAL,CAQGS,IARH,CAQQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARpB,EASGF,IATH,CASQT,IAAI,IAAI;AACZE,MAAAA,QAAQ,CAAC;AACPU,QAAAA,IAAI,EAAE,UADC;AAEPZ,QAAAA;AAFO,OAAD,CAAR;AAIA,aAAOA,IAAP;AACD,KAfH,EAgBGS,IAhBH,CAgBQT,IAAI,IAAI;AACZ,UAAGA,IAAI,CAACa,MAAL,KAAgBC,SAAnB,EAA8B;AAC5BZ,QAAAA,QAAQ,CAAC;AACPU,UAAAA,IAAI,EAAE;AADC,SAAD,CAAR;AAGAX,QAAAA,OAAO,CAACc,IAAR,mBAAwBf,IAAI,CAACgB,EAA7B;AACD,OALD,MAKO;AACLd,QAAAA,QAAQ,CAAC;AACPU,UAAAA,IAAI,EAAE,aADC;AAEPK,UAAAA,KAAK,EAAEjB,IAAI,CAACA;AAFL,SAAD,CAAR;AAID;AACF,KA5BH;AA6BD,GA9BD;AA+BD,CAhCM;AAkCP,OAAO,MAAMkB,MAAM,GAAG,CAAClB,IAAD,EAAOmB,MAAP,KAAkB;AACtC,SAAQjB,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAE,SADC;AAEPZ,MAAAA,IAFO;AAGPmB,MAAAA;AAHO,KAAD,CAAR;AAKD,GAND;AAOD,CARM","sourcesContent":["const baseURL = 'http://localhost:3000'\nconst usersURL = '/users'\nconst headers = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json',\n}\n\nexport const login = (user, history) => {\n  return (dispatch) => {\n    fetch(baseURL + usersURL , {\n      mode: 'cors',\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify({\n        user\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        dispatch({\n          type: 'GET_USER',\n          user\n        })\n        return user\n      })\n      .then(user => {\n        if(user.result === undefined) {\n          dispatch({\n            type: 'LOGGED_IN',\n          })\n          history.push(`/images/${user.id}`)\n        } else {\n          dispatch({\n            type: 'LOGIN_ERROR',\n            error: user.user\n          })\n        }\n      })\n  };\n};\n\nexport const logout = (user, images) => {\n  return (dispatch) => {\n    dispatch({\n      type: 'LOG_OUT',\n      user,\n      images\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}