{"ast":null,"code":"var _jsxFileName = \"/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImagesContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchImages } from '../../actions/imageActions';\nimport ImageList from './ImageList';\nimport ImageContainer from './ImageContainer';\nimport ImageUploader from './ImageUploader';\nimport { CardImg, Col, Row, Container, Card, Button, CardHeader, CardBody, CardText } from 'reactstrap';\n\nclass ImagesContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoadingImages = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \"Loading Images...\"));\n      } else {\n        return React.createElement(ImageList, {\n          images: this.props.images,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.handleImage = () => {\n      if (!this.props.currentImage) {\n        return this.props.images === [] ? React.createElement(ImageUploader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }) : React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"Click on an image to edit.\");\n      } else {\n        return React.createElement(ImageContainer, {\n          image: this.props.currentImage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchImages(this.props.user);\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.handleLoadingImages()), React.createElement(\"div\", {\n      className: \"col-md-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.handleImage())));\n  }\n\n}\n\nexport default connect(state => ({\n  images: state.imagesReducer.images,\n  user: state.loginReducer.user,\n  currentImage: state.imagesReducer.currentImage\n}), {\n  fetchImages\n})(ImagesContainer);","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImagesContainer.js"],"names":["React","Component","connect","fetchImages","ImageList","ImageContainer","ImageUploader","CardImg","Col","Row","Container","Card","Button","CardHeader","CardBody","CardText","ImagesContainer","handleLoadingImages","props","loading","images","handleImage","currentImage","componentDidMount","user","render","state","imagesReducer","loginReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,OAAT,EAAkBC,GAAlB,EAAuBC,GAAvB,EAA4BC,SAA5B,EAAuCC,IAAvC,EAA4CC,MAA5C,EAAoDC,UAApD,EAAgEC,QAAhE,EAA0EC,QAA1E,QAAyF,YAAzF;;AAEA,MAAMC,eAAN,SAA8Bf,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAKtCgB,mBALsC,GAKhB,MAAM;AAC1B,UAAG,KAAKC,KAAL,CAAWC,OAAd,EAAuB;AACrB,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CADF;AAKD,OAND,MAMO;AACL,eAAO,oBAAC,SAAD;AAAW,UAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KAfqC;;AAAA,SAiBrCC,WAjBqC,GAiBvB,MAAM;AAClB,UAAG,CAAC,KAAKH,KAAL,CAAWI,YAAf,EAA6B;AAC3B,eACE,KAAKJ,KAAL,CAAWE,MAAX,KAAsB,EAAtB,GAA2B,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA3B,GAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADjD;AAGD,OAJD,MAIO;AACL,eACC,oBAAC,cAAD;AAAgB,UAAA,KAAK,EAAE,KAAKF,KAAL,CAAWI,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAGD;AACF,KA3BoC;AAAA;;AACtCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,KAAL,CAAWf,WAAX,CAAuB,KAAKe,KAAL,CAAWM,IAAlC;AACD;;AA0BDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKR,mBAAL,EADH,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKI,WAAL,EADH,CAJF,CADF,CADF;AAYD;;AA1CqC;;AA6CxC,eAAenB,OAAO,CACpBwB,KAAK,KAAK;AACRN,EAAAA,MAAM,EAAEM,KAAK,CAACC,aAAN,CAAoBP,MADpB;AAERI,EAAAA,IAAI,EAAEE,KAAK,CAACE,YAAN,CAAmBJ,IAFjB;AAGRF,EAAAA,YAAY,EAAEI,KAAK,CAACC,aAAN,CAAoBL;AAH1B,CAAL,CADe,EAMtB;AAAEnB,EAAAA;AAAF,CANsB,CAAP,CAMEa,eANF,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchImages } from '../../actions/imageActions'\nimport ImageList from './ImageList'\nimport ImageContainer from './ImageContainer'\nimport ImageUploader from './ImageUploader'\nimport { CardImg, Col, Row, Container, Card,Button, CardHeader, CardBody, CardText} from 'reactstrap';\n\nclass ImagesContainer extends Component {\n  componentDidMount() {\n    this.props.fetchImages(this.props.user)\n  }\n\n  handleLoadingImages = () => {\n    if(this.props.loading) {\n      return (\n        <div>\n          <p>Loading Images...</p>\n        </div>\n      )\n    } else {\n      return <ImageList images={this.props.images} />\n    }\n  }\n\n   handleImage = () => {\n     if(!this.props.currentImage) {\n       return (\n         this.props.images === [] ? <ImageUploader /> : <p>Click on an image to edit.</p>\n       )\n     } else {\n       return (\n        <ImageContainer image={this.props.currentImage}/>\n       )\n     }\n   }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <div className=\"col-md-2\">\n            {this.handleLoadingImages()}\n          </div>\n          <div className=\"col-md-10\">\n            {this.handleImage()}\n          </div>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    images: state.imagesReducer.images,\n    user: state.loginReducer.user,\n    currentImage: state.imagesReducer.currentImage\n  }),\n{ fetchImages })(ImagesContainer);\n"]},"metadata":{},"sourceType":"module"}