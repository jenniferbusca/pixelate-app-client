{"ast":null,"code":"var _jsxFileName = \"/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImageContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { saveImage, removeImage } from '../../actions/imageActions';\nimport ShowImage from './ShowImage';\nimport ImageFilters from './ImageFilters';\nimport { Row, Col, Container, Card, Button, CardColumns, CardHeader, CardBody, CardTitle, CardText } from 'reactstrap';\n\nclass ImageContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSave = () => {\n      this.props.saveImage(this.props.currentImage, this.state.selectedImageFilter, this.props.history);\n    };\n\n    this.handleRemove = () => {\n      this.props.removeImage(this.props.currentImage.id, this.props.currentImage.user_id, this.props.history);\n    };\n\n    this.setSelectedImageFilter = selectedImageFilter => {\n      this.setState({\n        selectedImageFilter\n      });\n    };\n\n    this.handleFilterChange = e => {\n      const filter = e.target.value === \"none\" ? null : e.target.value;\n      this.setSelectedImageFilter(filter);\n    };\n\n    this.state = {\n      selectedImageFilter: null\n    };\n  }\n\n  componentDidMount() {\n    this.setSelectedImageFilter(this.props.currentImage.transformations);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.currentImage.id !== this.props.currentImage.id) {\n      this.setSelectedImageFilter(this.props.currentImage.transformations);\n    }\n  }\n\n  render() {\n    const currentImage = this.props.currentImage;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(ShowImage, {\n      image: currentImage,\n      selectedImageFilter: this.state.selectedImageFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      tag: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"FILTER EFFECTS\"), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Special Title Treatment\"), React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(ImageFilters, {\n      handleFilterChange: this.handleFilterChange,\n      selectedImageFilter: this.state.selectedImageFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: handleSave => this.handleSave(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Save Changes\"))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      tag: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"DELETE IMAGE\"), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Special Title Treatment\"), React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"No longer want this image?\"), React.createElement(Button, {\n      onClick: handleRemove => this.handleRemove(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Delete Image\"))))));\n  }\n\n}\n\n;\nexport default connect(state => ({\n  images: state.imagesReducer.images,\n  currentImage: state.imagesReducer.currentImage\n}), {\n  saveImage,\n  removeImage\n})(withRouter(ImageContainer));","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImageContainer.js"],"names":["React","Component","connect","withRouter","saveImage","removeImage","ShowImage","ImageFilters","Row","Col","Container","Card","Button","CardColumns","CardHeader","CardBody","CardTitle","CardText","ImageContainer","constructor","props","handleSave","currentImage","state","selectedImageFilter","history","handleRemove","id","user_id","setSelectedImageFilter","setState","handleFilterChange","e","filter","target","value","componentDidMount","transformations","componentDidUpdate","prevProps","render","images","imagesReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { saveImage, removeImage } from '../../actions/imageActions';\nimport ShowImage from './ShowImage';\nimport ImageFilters from './ImageFilters';\nimport { Row, Col, Container, Card,Button, CardColumns, CardHeader, CardBody, CardTitle, CardText} from 'reactstrap';\n\nclass ImageContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedImageFilter: null\n    };\n  };\n\n  componentDidMount() {\n    this.setSelectedImageFilter(this.props.currentImage.transformations);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.currentImage.id !== this.props.currentImage.id) {\n      this.setSelectedImageFilter(this.props.currentImage.transformations);\n    }\n  }\n\n  handleSave = () => {\n    this.props.saveImage(this.props.currentImage, this.state.selectedImageFilter, this.props.history)\n  }\n\n  handleRemove = () => {\n    this.props.removeImage(this.props.currentImage.id, this.props.currentImage.user_id, this.props.history)\n  }\n\n  setSelectedImageFilter = (selectedImageFilter) => {\n    this.setState({ selectedImageFilter });\n  }\n\n  handleFilterChange = (e) => {\n    const filter = e.target.value === \"none\" ? null : e.target.value;\n    this.setSelectedImageFilter(filter);\n  }\n\n  render() {\n    const { currentImage } = this.props;\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <Card>\n              <ShowImage image={currentImage} selectedImageFilter={this.state.selectedImageFilter} />\n            </Card>\n          </Col>\n          <Col>\n            <Card>\n              <CardHeader tag=\"h4\">FILTER EFFECTS</CardHeader>\n              <CardBody>\n                <CardTitle>Special Title Treatment</CardTitle>\n                <CardText>\n                  <ImageFilters handleFilterChange={this.handleFilterChange} selectedImageFilter={this.state.selectedImageFilter}/>\n                </CardText>\n                <Button onClick={handleSave => this.handleSave()}>Save Changes</Button>\n              </CardBody>\n            </Card>\n            <Card>\n              <CardHeader tag=\"h4\">DELETE IMAGE</CardHeader>\n              <CardBody>\n                <CardTitle>Special Title Treatment</CardTitle>\n                <CardText>\n                  No longer want this image?\n                </CardText>\n                <Button onClick={handleRemove => this.handleRemove()}>Delete Image</Button>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n      </Container>\n    );\n  }\n};\n\nexport default connect(\n  state => ({\n    images: state.imagesReducer.images,\n    currentImage: state.imagesReducer.currentImage\n  }),\n  { saveImage, removeImage })(withRouter(ImageContainer));\n"]},"metadata":{},"sourceType":"module"}