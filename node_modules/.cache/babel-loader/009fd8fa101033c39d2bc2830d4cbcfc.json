{"ast":null,"code":"var _jsxFileName = \"/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImageContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { saveImage, removeImage } from '../../actions/imageActions';\nimport ShowImage from './ShowImage';\nimport ImageFilters from './ImageFilters';\n\nclass ImageContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSave = () => {\n      debugger;\n      this.props.saveImage(this.state.image.id, this.state.selectedImageFilter);\n    };\n\n    this.handleRemove = () => {\n      this.props.removeImage(this.state.image.id, this.props.user.id, this.props.history);\n    };\n\n    this.handleFilterChange = e => {\n      const filter = e.target.value;\n      this.setState({\n        selectedImageFilter: filter === \"none\" ? null : filter\n      });\n    };\n\n    this.state = {\n      image: props.images.find(image => image.id === this.props.match.params.id),\n      selectedImageFilter: null\n    };\n  }\n\n  render() {\n    let image = this.props.images.filter(image => image.id.toString() === this.state.image.id)[0];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(ShowImage, {\n      image: this.state.image,\n      selectedImageFilter: this.state.selectedImageFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(ImageFilters, {\n      handleFilterChange: this.handleFilterChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: handleSave => this.handleSave(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Save Image\"), React.createElement(\"button\", {\n      onClick: handleRemove => this.handleRemove(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Remove Image\"));\n  }\n\n}\n\n;\nexport default connect(state => ({\n  images: state.imagesReducer.images,\n  user: state.loginReducer.user\n}), {\n  saveImage,\n  removeImage\n})(ImageContainer);","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImageContainer.js"],"names":["React","Component","connect","saveImage","removeImage","ShowImage","ImageFilters","ImageContainer","constructor","props","handleSave","state","image","id","selectedImageFilter","handleRemove","user","history","handleFilterChange","e","filter","target","value","setState","images","find","match","params","render","toString","imagesReducer","loginReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,4BAAvC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,cAAN,SAA6BN,SAA7B,CAAuC;AACrCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,UARmB,GAQN,MAAM;AACjB;AACA,WAAKD,KAAL,CAAWN,SAAX,CAAqB,KAAKQ,KAAL,CAAWC,KAAX,CAAiBC,EAAtC,EAA0C,KAAKF,KAAL,CAAWG,mBAArD;AACD,KAXkB;;AAAA,SAanBC,YAbmB,GAaJ,MAAM;AACnB,WAAKN,KAAL,CAAWL,WAAX,CAAuB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,EAAxC,EAA4C,KAAKJ,KAAL,CAAWO,IAAX,CAAgBH,EAA5D,EAAgE,KAAKJ,KAAL,CAAWQ,OAA3E;AACD,KAfkB;;AAAA,SAiBnBC,kBAjBmB,GAiBGC,CAAD,IAAO;AAC1B,YAAMC,MAAM,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAxB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,mBAAmB,EAAEM,MAAM,KAAK,MAAX,GAAoB,IAApB,GAA2BA;AAAlD,OAAd;AACD,KApBkB;;AAEjB,SAAKT,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEH,KAAK,CAACe,MAAN,CAAaC,IAAb,CAAkBb,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAa,KAAKJ,KAAL,CAAWiB,KAAX,CAAiBC,MAAjB,CAAwBd,EAAhE,CADI;AAEXC,MAAAA,mBAAmB,EAAE;AAFV,KAAb;AAID;;AAgBDc,EAAAA,MAAM,GAAG;AACP,QAAIhB,KAAK,GAAG,KAAKH,KAAL,CAAWe,MAAX,CAAkBJ,MAAlB,CAAyBR,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASgB,QAAT,OAAwB,KAAKlB,KAAL,CAAWC,KAAX,CAAiBC,EAA3E,EAA+E,CAA/E,CAAZ;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,KAA7B;AAAoC,MAAA,mBAAmB,EAAE,KAAKD,KAAL,CAAWG,mBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,YAAD;AAAc,MAAA,kBAAkB,EAAE,KAAKI,kBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,OAAO,EAAER,UAAU,IAAI,KAAKA,UAAL,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE;AAAQ,MAAA,OAAO,EAAEK,YAAY,IAAI,KAAKA,YAAL,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,CADF;AAQD;;AAjCoC;;AAkCtC;AAED,eAAeb,OAAO,CACpBS,KAAK,KAAK;AACRa,EAAAA,MAAM,EAAEb,KAAK,CAACmB,aAAN,CAAoBN,MADpB;AAERR,EAAAA,IAAI,EAAEL,KAAK,CAACoB,YAAN,CAAmBf;AAFjB,CAAL,CADe,EAKpB;AAAEb,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CALoB,CAAP,CAKeG,cALf,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { saveImage, removeImage } from '../../actions/imageActions';\nimport ShowImage from './ShowImage';\nimport ImageFilters from './ImageFilters';\n\nclass ImageContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: props.images.find(image => image.id === this.props.match.params.id),\n      selectedImageFilter: null\n    };\n  };\n\n  handleSave = () => {\n    debugger\n    this.props.saveImage(this.state.image.id, this.state.selectedImageFilter)\n  }\n\n  handleRemove = () => {\n    this.props.removeImage(this.state.image.id, this.props.user.id, this.props.history)\n  }\n\n  handleFilterChange = (e) => {\n    const filter = e.target.value\n    this.setState({ selectedImageFilter: filter === \"none\" ? null : filter });\n  }\n\n  render() {\n    let image = this.props.images.filter(image => image.id.toString() === this.state.image.id)[0]\n    return (\n      <div>\n        <ShowImage image={this.state.image} selectedImageFilter={this.state.selectedImageFilter} />\n        <ImageFilters handleFilterChange={this.handleFilterChange} />\n        <button onClick={handleSave => this.handleSave()}>Save Image</button>\n        <button onClick={handleRemove => this.handleRemove()}>Remove Image</button>\n      </div>\n    );\n  }\n};\n\nexport default connect(\n  state => ({\n    images: state.imagesReducer.images,\n    user: state.loginReducer.user\n  }),\n  { saveImage, removeImage })(ImageContainer);\n"]},"metadata":{},"sourceType":"module"}