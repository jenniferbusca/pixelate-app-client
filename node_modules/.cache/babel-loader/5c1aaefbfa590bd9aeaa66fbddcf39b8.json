{"ast":null,"code":"var _jsxFileName = \"/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImageContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fetchImages, saveImage, removeImage, currentImage as getCurrentImage } from '../../actions/imageActions';\nimport ShowImage from './ShowImage';\nimport ImageFilters from './ImageFilters';\nimport { CardGroup, Col, Card, Button, CardHeader, CardBody, CardText } from 'reactstrap';\n\nclass ImageContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSave = () => {\n      this.props.saveImage(this.props.currentImage, this.state.selectedImageFilter);\n    };\n\n    this.handleRemove = () => {\n      this.props.removeImage(this.props.currentImage.id, this.props.currentImage.user_id, this.props.history);\n    };\n\n    this.setSelectedImageFilter = selectedImageFilter => {\n      this.setState({\n        selectedImageFilter\n      });\n    };\n\n    this.handleFilterChange = e => {\n      const filter = e.target.value === \"none\" ? null : e.target.value;\n      this.setSelectedImageFilter(filter);\n    };\n\n    this.state = {\n      selectedImageFilter: null\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"mount\", this.props.currentImage);\n    this.setSelectedImageFilter(this.props.currentImage.transformations);\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(\"update\", this.props.currentImage);\n    console.log(\"update\", this.state.selectedImageFilter);\n\n    if (prevProps.currentImage.id !== this.props.currentImage.id) {\n      this.setSelectedImageFilter(this.props.currentImage.transformations);\n    }\n  }\n\n  render() {\n    const currentImage = this.props.currentImage;\n    return React.createElement(CardGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"card-img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(ShowImage, {\n      image: currentImage,\n      selectedImageFilter: this.state.selectedImageFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"FILTER EFFECTS\"), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(ImageFilters, {\n      handleFilterChange: this.handleFilterChange,\n      selectedImageFilter: this.state.selectedImageFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: handleSave => this.handleSave(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Save Changes\"))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"DELETE IMAGE\"), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"No longer want this image?\"), React.createElement(Button, {\n      onClick: handleRemove => this.handleRemove(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Delete Image\")))));\n  }\n\n}\n\n;\nexport default connect(state => ({\n  images: state.imagesReducer.images,\n  user: state.loginReducer.user,\n  currentImage: state.imagesReducer.currentImage\n}), {\n  fetchImages,\n  saveImage,\n  removeImage,\n  getCurrentImage\n})(withRouter(ImageContainer));","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImageContainer.js"],"names":["React","Component","connect","withRouter","fetchImages","saveImage","removeImage","currentImage","getCurrentImage","ShowImage","ImageFilters","CardGroup","Col","Card","Button","CardHeader","CardBody","CardText","ImageContainer","constructor","props","handleSave","state","selectedImageFilter","handleRemove","id","user_id","history","setSelectedImageFilter","setState","handleFilterChange","e","filter","target","value","componentDidMount","console","log","transformations","componentDidUpdate","prevProps","render","images","imagesReducer","user","loginReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fetchImages, saveImage, removeImage, currentImage as getCurrentImage } from '../../actions/imageActions';\nimport ShowImage from './ShowImage';\nimport ImageFilters from './ImageFilters';\nimport { CardGroup, Col, Card,Button, CardHeader, CardBody, CardText} from 'reactstrap';\n\nclass ImageContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedImageFilter: null\n    };\n  };\n\n  componentDidMount() {\n    console.log(\"mount\", this.props.currentImage)\n    this.setSelectedImageFilter(this.props.currentImage.transformations);\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(\"update\", this.props.currentImage)\n    console.log(\"update\", this.state.selectedImageFilter)\n    if (prevProps.currentImage.id !== this.props.currentImage.id) {\n      this.setSelectedImageFilter(this.props.currentImage.transformations);\n    }\n  }\n\n  handleSave = () => {\n    this.props.saveImage(this.props.currentImage, this.state.selectedImageFilter)\n  }\n\n  handleRemove = () => {\n    this.props.removeImage(this.props.currentImage.id, this.props.currentImage.user_id, this.props.history)\n  }\n\n  setSelectedImageFilter = (selectedImageFilter) => {\n    this.setState({ selectedImageFilter });\n  }\n\n  handleFilterChange = (e) => {\n    const filter = e.target.value === \"none\" ? null : e.target.value;\n    this.setSelectedImageFilter(filter);\n  }\n\n  render() {\n    const { currentImage } = this.props;\n    return (\n      <CardGroup>\n        <Card className=\"card-img\">\n          <ShowImage image={currentImage} selectedImageFilter={this.state.selectedImageFilter} />\n        </Card>\n        <Col md=\"4\">\n            <Card>\n              <CardHeader>FILTER EFFECTS</CardHeader>\n              <CardBody>\n                <CardText>\n                  <ImageFilters handleFilterChange={this.handleFilterChange} selectedImageFilter={this.state.selectedImageFilter}/>\n                </CardText>\n                <Button onClick={handleSave => this.handleSave()}>Save Changes</Button>\n              </CardBody>\n            </Card>\n            <Card>\n              <CardHeader>DELETE IMAGE</CardHeader>\n              <CardBody>\n                <CardText>\n                  No longer want this image?\n                </CardText>\n                <Button onClick={handleRemove => this.handleRemove()}>Delete Image</Button>\n              </CardBody>\n            </Card>\n          </Col>\n        </CardGroup>\n    );\n  }\n};\n\nexport default connect(\n  state => ({\n    images: state.imagesReducer.images,\n    user: state.loginReducer.user,\n    currentImage: state.imagesReducer.currentImage\n  }),\n  { fetchImages, saveImage, removeImage, getCurrentImage })(withRouter(ImageContainer));\n"]},"metadata":{},"sourceType":"module"}