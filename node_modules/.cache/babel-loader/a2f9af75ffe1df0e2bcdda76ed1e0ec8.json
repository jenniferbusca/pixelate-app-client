{"ast":null,"code":"var _jsxFileName = \"/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImagesContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchImages } from '../../actions/imageActions';\nimport ImageList from './ImageList';\nimport ImageContainer from './ImageContainer';\n\nclass ImagesContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoadingImages = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, \"Loading Images...\"));\n      } else {\n        return React.createElement(ImageList, {\n          images: this.props.images,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchImages(this.props.user);\n  }\n\n  render() {\n    const image = this.props.images.find(image => image.id.toString() === this.props.location.pathname.slice(7, 11));\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.handleLoadingImages()), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.state.currentImage === null ? React.createElement(ImageContainer, {\n      image: image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }) : undefined)));\n  }\n\n} //inline (mapStateToProps, mapDispatchToProps)\n\n\nexport default connect(state => ({\n  images: state.imagesReducer.images,\n  user: state.loginReducer.user,\n  currentImage: state.imagesReducer.currentImage\n}), {\n  fetchImages\n})(ImagesContainer);","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImagesContainer.js"],"names":["React","Component","connect","fetchImages","ImageList","ImageContainer","ImagesContainer","handleLoadingImages","props","loading","images","componentDidMount","user","render","image","find","id","toString","location","pathname","slice","state","currentImage","undefined","imagesReducer","loginReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAMtCM,mBANsC,GAMhB,MAAM;AAC1B,UAAG,KAAKC,KAAL,CAAWC,OAAd,EAAuB;AACrB,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CADF;AAKD,OAND,MAMO;AACL,eAAO,oBAAC,SAAD;AAAW,UAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KAhBqC;AAAA;;AAEtCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWI,IAAlC;AACD;;AAeDC,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKN,KAAL,CAAWE,MAAX,CAAkBK,IAAlB,CAAuBD,KAAK,IAAIA,KAAK,CAACE,EAAN,CAASC,QAAT,OAAwB,KAAKT,KAAL,CAAWU,QAAX,CAAoBC,QAApB,CAA6BC,KAA7B,CAAmC,CAAnC,EAAsC,EAAtC,CAAxD,CAAd;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKb,mBAAL,EADH,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKc,KAAL,CAAWC,YAAX,KAA4B,IAA5B,GAAmC,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAER,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnC,GAAqES,SADzE,CAJF,CADF,CADF;AAYD;;AAlCqC,C,CAqCxC;;;AACA,eAAerB,OAAO,CACpBmB,KAAK,KAAK;AACRX,EAAAA,MAAM,EAAEW,KAAK,CAACG,aAAN,CAAoBd,MADpB;AAERE,EAAAA,IAAI,EAAES,KAAK,CAACI,YAAN,CAAmBb,IAFjB;AAGRU,EAAAA,YAAY,EAAED,KAAK,CAACG,aAAN,CAAoBF;AAH1B,CAAL,CADe,EAMtB;AAAEnB,EAAAA;AAAF,CANsB,CAAP,CAMEG,eANF,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchImages } from '../../actions/imageActions'\nimport ImageList from './ImageList'\nimport ImageContainer from './ImageContainer'\n\nclass ImagesContainer extends Component {\n\n  componentDidMount() {\n    this.props.fetchImages(this.props.user)\n  }\n\n  handleLoadingImages = () => {\n    if(this.props.loading) {\n      return (\n        <div>\n          <p>Loading Images...</p>\n        </div>\n      )\n    } else {\n      return <ImageList images={this.props.images} />\n    }\n  }\n\n\n  render() {\n    const image = this.props.images.find(image => image.id.toString() === this.props.location.pathname.slice(7, 11))\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-2\">\n            {this.handleLoadingImages()}\n          </div>\n          <div className=\"col\">\n            { this.state.currentImage === null ? <ImageContainer image={image}/> : undefined }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n//inline (mapStateToProps, mapDispatchToProps)\nexport default connect(\n  state => ({\n    images: state.imagesReducer.images,\n    user: state.loginReducer.user,\n    currentImage: state.imagesReducer.currentImage\n  }),\n{ fetchImages })(ImagesContainer);\n"]},"metadata":{},"sourceType":"module"}