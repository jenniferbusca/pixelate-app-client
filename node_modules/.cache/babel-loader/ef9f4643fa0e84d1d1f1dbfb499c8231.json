{"ast":null,"code":"var _jsxFileName = \"/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImageList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Image, Transformation, CloudinaryContext } from 'cloudinary-react';\nimport ImageContainer from './ImageContainer';\nimport { currentImage } from '../../actions/imageActions';\n\nclass ImageList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = image => {\n      this.props.currentImage(image);\n    };\n\n    this.state = {\n      currentImage: null\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    debugger;\n  }\n\n  render() {\n    return this.props.images.map(image => React.createElement(\"div\", {\n      key: image.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(CloudinaryContext, {\n      cloudName: \"df8jfhyew\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Image, {\n      className: \"img-thumbnail\",\n      publicId: image.image_url,\n      onClick: () => this.handleClick(image),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Transformation, {\n      effect: image.transformations,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default connect(state => ({\n  currentImage: state.imagesReducer.currentImage\n}), {\n  currentImage\n})(ImageList);","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImageList.js"],"names":["React","Component","connect","Image","Transformation","CloudinaryContext","ImageContainer","currentImage","ImageList","constructor","props","handleClick","image","state","componentDidUpdate","prevProps","render","images","map","id","image_url","transformations","imagesReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,KAAR,EAAeC,cAAf,EAA+BC,iBAA/B,QAAuD,kBAAvD;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,YAAT,QAA6B,4BAA7B;;AAEA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAChCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,WAXmB,GAWJC,KAAD,IAAW;AACvB,WAAKF,KAAL,CAAWH,YAAX,CAAwBK,KAAxB;AACD,KAbkB;;AAEjB,SAAKC,KAAL,GAAa;AACXN,MAAAA,YAAY,EAAE;AADH,KAAb;AAGD;;AAEDO,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B;AACD;;AAMAC,EAAAA,MAAM,GAAG;AACP,WACE,KAAKN,KAAL,CAAWO,MAAX,CAAkBC,GAAlB,CAAsBN,KAAK,IACzB;AAAK,MAAA,GAAG,EAAEA,KAAK,CAACO,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAmB,MAAA,SAAS,EAAC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAiC,MAAA,QAAQ,EAAEP,KAAK,CAACQ,SAAjD;AAA4D,MAAA,OAAO,EAAE,MAAM,KAAKT,WAAL,CAAiBC,KAAjB,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAEA,KAAK,CAACS,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADJ,CADF,CADF;AAWD;;AA5B8B;;AAgClC,eAAenB,OAAO,CACpBW,KAAK,KAAK;AACRN,EAAAA,YAAY,EAAEM,KAAK,CAACS,aAAN,CAAoBf;AAD1B,CAAL,CADe,EAGjB;AAAEA,EAAAA;AAAF,CAHiB,CAAP,CAGQC,SAHR,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {Image, Transformation, CloudinaryContext} from 'cloudinary-react';\nimport ImageContainer from './ImageContainer'\nimport { currentImage } from '../../actions/imageActions'\n\nclass ImageList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentImage: null\n    };\n  };\n\n  componentDidUpdate(prevProps) {\n    debugger\n  }\n\n  handleClick = (image) => {\n    this.props.currentImage(image)\n  }\n\n   render() {\n     return (\n       this.props.images.map(image =>\n         <div key={image.id}>\n             <CloudinaryContext cloudName=\"df8jfhyew\" >\n               <Image className='img-thumbnail' publicId={image.image_url} onClick={() => this.handleClick(image)}>\n                 <Transformation effect={image.transformations} />\n               </Image>\n             </CloudinaryContext>\n         </div>\n       )\n     )\n   }\n\n}\n\nexport default connect(\n  state => ({\n    currentImage: state.imagesReducer.currentImage\n  }),{ currentImage })(ImageList);\n"]},"metadata":{},"sourceType":"module"}