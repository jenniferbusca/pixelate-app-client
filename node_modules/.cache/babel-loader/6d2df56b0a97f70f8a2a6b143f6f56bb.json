{"ast":null,"code":"var _jsxFileName = \"/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImageUploader.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { postImages } from '../../actions/imageActions';\n\nclass ImageUploader extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showWidget = () => {\n      window.cloudinary.openUploadWidget({\n        cloudName: \"df8jfhyew\",\n        uploadPreset: \"eytnlidt\"\n      }, (error, result) => {\n        if (!error && result && result.event === \"success\") {\n          this.handleSubmit(result.info);\n        }\n      });\n    };\n  }\n\n  handleSubmit(imageInfo) {\n    let newImage = {\n      id: 1,\n      image: imageInfo.url\n    };\n    this.props.postImages(newImage);\n    console.log('Done! Here is the image info: ', imageInfo);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"upload-widget\",\n      className: \"cloudinary-button\",\n      onClick: this.showWidget,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Upload files\"));\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    images: state.images,\n    loading: state.loading\n  };\n}; // export default ImageUploader;\n\n\nexport default connect(mapDispatchToProps, {\n  postImages\n})(ImageUploader);","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImageUploader.js"],"names":["React","Component","connect","postImages","ImageUploader","showWidget","window","cloudinary","openUploadWidget","cloudName","uploadPreset","error","result","event","handleSubmit","info","imageInfo","newImage","id","image","url","props","console","log","render","mapDispatchToProps","state","images","loading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,4BAA3B;;AAGA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAQrCI,UARqC,GAQxB,MAAM;AAChBC,MAAAA,MAAM,CAACC,UAAP,CAAkBC,gBAAlB,CAAmC;AACjCC,QAAAA,SAAS,EAAE,WADsB;AAEjCC,QAAAA,YAAY,EAAE;AAFmB,OAAnC,EAGE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjB,YAAI,CAACD,KAAD,IAAUC,MAAV,IAAoBA,MAAM,CAACC,KAAP,KAAiB,SAAzC,EAAoD;AAClD,eAAKC,YAAL,CAAkBF,MAAM,CAACG,IAAzB;AACD;AACF,OAPH;AASD,KAlBmC;AAAA;;AAEpCD,EAAAA,YAAY,CAACE,SAAD,EAAY;AACtB,QAAIC,QAAQ,GAAG;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,KAAK,EAACH,SAAS,CAACI;AAAzB,KAAf;AACA,SAAKC,KAAL,CAAWlB,UAAX,CAAsBc,QAAtB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CP,SAA9C;AACD;;AAcDQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,EAAE,EAAC,eADL;AAEE,MAAA,SAAS,EAAC,mBAFZ;AAGE,MAAA,OAAO,EAAE,KAAKnB,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF;AAUD;;AA/BmC;;AAkCtC,MAAMoB,kBAAkB,GAAGC,KAAK,IAAI;AAClC,SAAO;AACLC,IAAAA,MAAM,EAAED,KAAK,CAACC,MADT;AAELC,IAAAA,OAAO,EAAEF,KAAK,CAACE;AAFV,GAAP;AAID,CALD,C,CAOA;;;AACA,eAAe1B,OAAO,CAACuB,kBAAD,EAAqB;AAAEtB,EAAAA;AAAF,CAArB,CAAP,CAA4CC,aAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { postImages } from '../../actions/imageActions'\n\n\nclass ImageUploader extends Component {\n\n  handleSubmit(imageInfo) {\n    let newImage = { id: 1, image:imageInfo.url }\n    this.props.postImages(newImage)\n    console.log('Done! Here is the image info: ', imageInfo)\n  }\n\n\tshowWidget = () => {\n    window.cloudinary.openUploadWidget({\n      cloudName: \"df8jfhyew\",\n      uploadPreset: \"eytnlidt\"},\n      (error, result) => {\n        if (!error && result && result.event === \"success\") {\n          this.handleSubmit(result.info)\n        }\n      }\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        <button\n          id=\"upload-widget\"\n          className=\"cloudinary-button\"\n          onClick={this.showWidget}>\n          Upload files\n        </button>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    images: state.images,\n    loading: state.loading\n  }\n}\n\n// export default ImageUploader;\nexport default connect(mapDispatchToProps, { postImages })(ImageUploader)\n"]},"metadata":{},"sourceType":"module"}