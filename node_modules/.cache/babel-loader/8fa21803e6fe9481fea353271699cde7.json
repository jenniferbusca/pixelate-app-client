{"ast":null,"code":"var _jsxFileName = \"/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImageContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { saveImage, removeImage } from '../../actions/imageActions';\nimport ShowImage from './ShowImage';\nimport ImageFilters from './ImageFilters';\nimport { Card, Button, CardColumns } from 'reactstrap';\n\nclass ImageContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSave = () => {\n      this.props.saveImage(this.props.currentImage, this.state.selectedImageFilter);\n    };\n\n    this.handleRemove = () => {\n      this.props.removeImage(this.props.currentImage.id, this.props.currentImage.user_id, this.props.history);\n    };\n\n    this.setSelectedImageFilter = selectedImageFilter => {\n      this.setState({\n        selectedImageFilter\n      });\n    };\n\n    this.handleFilterChange = e => {\n      const filter = e.target.value === \"none\" ? null : e.target.value;\n      this.setSelectedImageFilter(filter);\n    };\n\n    this.state = {\n      selectedImageFilter: this.props.currentImage.transformations\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.currentImage.id !== this.props.currentImage.id) {\n      this.setSelectedImageFilter(this.props.currentImage.transformations);\n    }\n  }\n\n  render() {\n    const currentImage = this.props.currentImage;\n    return React.createElement(CardColumns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(ShowImage, {\n      image: currentImage,\n      selectedImageFilter: this.state.selectedImageFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(ImageFilters, {\n      handleFilterChange: this.handleFilterChange,\n      selectedImageFilter: this.state.selectedImageFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: handleSave => this.handleSave(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Save Changes\")), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Options:\"), React.createElement(Button, {\n      onClick: handleRemove => this.handleRemove(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Delete Image\")));\n  }\n\n}\n\n;\nexport default connect(state => ({\n  images: state.imagesReducer.images,\n  currentImage: state.imagesReducer.currentImage\n}), {\n  saveImage,\n  removeImage\n})(ImageContainer);","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImageContainer.js"],"names":["React","Component","connect","saveImage","removeImage","ShowImage","ImageFilters","Card","Button","CardColumns","ImageContainer","constructor","props","handleSave","currentImage","state","selectedImageFilter","handleRemove","id","user_id","history","setSelectedImageFilter","setState","handleFilterChange","e","filter","target","value","transformations","componentDidUpdate","prevProps","render","images","imagesReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { saveImage, removeImage } from '../../actions/imageActions';\nimport ShowImage from './ShowImage';\nimport ImageFilters from './ImageFilters';\nimport { Card,Button,CardColumns} from 'reactstrap';\n\nclass ImageContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedImageFilter: this.props.currentImage.transformations\n    };\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.currentImage.id !== this.props.currentImage.id) {\n      this.setSelectedImageFilter(this.props.currentImage.transformations);\n    }\n  }\n\n  handleSave = () => {\n    this.props.saveImage(this.props.currentImage, this.state.selectedImageFilter)\n  }\n\n  handleRemove = () => {\n    this.props.removeImage(this.props.currentImage.id, this.props.currentImage.user_id, this.props.history)\n  }\n\n  setSelectedImageFilter = (selectedImageFilter) => {\n    this.setState({ selectedImageFilter });\n  }\n\n  handleFilterChange = (e) => {\n    const filter = e.target.value === \"none\" ? null : e.target.value;\n    this.setSelectedImageFilter(filter);\n  }\n\n  render() {\n    const { currentImage } = this.props;\n    return (\n      <CardColumns>\n        <Card>\n          <ShowImage image={currentImage} selectedImageFilter={this.state.selectedImageFilter} />\n        </Card>\n        <Card>\n          <ImageFilters handleFilterChange={this.handleFilterChange} selectedImageFilter={this.state.selectedImageFilter}/>\n          <Button onClick={handleSave => this.handleSave()}>Save Changes</Button>\n        </Card>\n        <Card>\n          <label>Options:</label>\n          <Button onClick={handleRemove => this.handleRemove()}>Delete Image</Button>\n        </Card>\n      </CardColumns>\n    );\n  }\n};\n\nexport default connect(\n  state => ({\n    images: state.imagesReducer.images,\n    currentImage: state.imagesReducer.currentImage\n  }),\n  { saveImage, removeImage })(ImageContainer);\n"]},"metadata":{},"sourceType":"module"}