{"ast":null,"code":"var _jsxFileName = \"/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImagesContainer.js\";\nimport React, { Component } from 'react';\nimport ImageUploader from '../Images/ImageUploader';\nimport { connect } from 'react-redux';\nimport { fetchImages } from '../../actions/imageActions';\nimport ImageList from './ImageList';\n\nclass ImagesContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \"Loading Images...\"));\n      } else {\n        return React.createElement(ImageList, {\n          images: this.props.images,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchImages(this.state.user);\n    debugger;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.handleLoading(), React.createElement(ImageUploader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }\n\n} //inline (mapStateToProps, mapDispatchToProps\n\n\nexport default connect(state => ({\n  images: state.imagesReducer.images,\n  user: state.loginReducer.user\n}), {\n  fetchImages\n})(ImagesContainer);","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImagesContainer.js"],"names":["React","Component","ImageUploader","connect","fetchImages","ImageList","ImagesContainer","handleLoading","props","loading","images","componentDidMount","state","user","render","imagesReducer","loginReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAOtCM,aAPsC,GAOtB,MAAM;AACpB,UAAG,KAAKC,KAAL,CAAWC,OAAd,EAAuB;AACrB,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CADF;AAKD,OAND,MAMO;AACL,eAAO,oBAAC,SAAD;AAAW,UAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KAjBqC;AAAA;;AAEtCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,KAAL,CAAWJ,WAAX,CAAuB,KAAKQ,KAAL,CAAWC,IAAlC;AACA;AACD;;AAcDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKP,aAAL,EADH,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA1BqC,C,CA8BxC;;;AACA,eAAeJ,OAAO,CACpBS,KAAK,KAAK;AACRF,EAAAA,MAAM,EAAEE,KAAK,CAACG,aAAN,CAAoBL,MADpB;AAERG,EAAAA,IAAI,EAAED,KAAK,CAACI,YAAN,CAAmBH;AAFjB,CAAL,CADe,EAIjB;AAAET,EAAAA;AAAF,CAJiB,CAAP,CAIOE,eAJP,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport ImageUploader from '../Images/ImageUploader'\nimport { connect } from 'react-redux';\nimport { fetchImages } from '../../actions/imageActions'\nimport ImageList from './ImageList'\n\nclass ImagesContainer extends Component {\n\n  componentDidMount() {\n    this.props.fetchImages(this.state.user)\n    debugger\n  }\n\n  handleLoading = () => {\n    if(this.props.loading) {\n      return (\n        <div>\n          <p>Loading Images...</p>\n        </div>\n      )\n    } else {\n      return <ImageList images={this.props.images} />\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.handleLoading()}\n        <ImageUploader />\n      </div>\n    )\n  }\n}\n\n\n//inline (mapStateToProps, mapDispatchToProps\nexport default connect(\n  state => ({\n    images: state.imagesReducer.images,\n    user: state.loginReducer.user\n  }),{ fetchImages })(ImagesContainer);\n"]},"metadata":{},"sourceType":"module"}