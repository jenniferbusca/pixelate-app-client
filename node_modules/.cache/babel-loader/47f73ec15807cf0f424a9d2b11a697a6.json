{"ast":null,"code":"var _jsxFileName = \"/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nimport imagesReducer from './reducers/imagesReducer';\nimport loginReducer from './reducers/loginReducer';\nimport * as serviceWorker from './serviceWorker';\nconst rootReducer = combineReducers({\n  imagesReducer,\n  loginReducer\n}); // Middleware: Redux Persist Config\n\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = createStore(persistedReducer, applyMiddleware(thunk));\nexport const persistor = persistStore(store);\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(PersistGate, {\n  persistor: persistor,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/index.js"],"names":["React","ReactDOM","App","Provider","combineReducers","createStore","applyMiddleware","persistStore","persistReducer","PersistGate","storage","thunk","imagesReducer","loginReducer","serviceWorker","rootReducer","persistConfig","key","persistedReducer","store","persistor","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,MAAMC,WAAW,GAAGX,eAAe,CAAC;AAClCQ,EAAAA,aADkC;AAElCC,EAAAA;AAFkC,CAAD,CAAnC,C,CAKC;;AACA,MAAMG,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBP,EAAAA;AAFoB,CAAtB;AAKD,OAAO,MAAMQ,gBAAgB,GAAGV,cAAc,CAACQ,aAAD,EAAgBD,WAAhB,CAAvC;AACP,OAAO,MAAMI,KAAK,GAAGd,WAAW,CAACa,gBAAD,EAAmBZ,eAAe,CAACK,KAAD,CAAlC,CAAzB;AACP,OAAO,MAAMS,SAAS,GAAGb,YAAY,CAACY,KAAD,CAA9B;AAEPlB,QAAQ,CAACoB,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,WAAD;AAAa,EAAA,SAAS,EAAEC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAMEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CAQA;AACA;AACA;;AACAT,aAAa,CAACU,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nimport imagesReducer from './reducers/imagesReducer';\nimport loginReducer from './reducers/loginReducer';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootReducer = combineReducers({\n  imagesReducer,\n  loginReducer\n})\n\n // Middleware: Redux Persist Config\n const persistConfig = {\n   key: 'root',\n   storage\n };\n\nexport const persistedReducer = persistReducer(persistConfig, rootReducer)\nexport const store = createStore(persistedReducer, applyMiddleware(thunk))\nexport const persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}