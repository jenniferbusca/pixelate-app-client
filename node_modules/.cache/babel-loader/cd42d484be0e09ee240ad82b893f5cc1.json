{"ast":null,"code":"const baseURL = 'http://localhost:3000';\nconst usersURL = '/users';\n\nconst loginError = error => {\n  console.log(error);\n};\n\nexport const login = (user, history) => {\n  return dispatch => {\n    fetch(baseURL + usersURL, {\n      mode: 'cors',\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(response => response.json()).then(user => {\n      dispatch({\n        type: 'GET_USER',\n        user\n      });\n      return user;\n    }).then(user => {\n      if (user.result === undefined) {\n        history.push(\"/images/\".concat(user.id));\n      } else {\n        dispatch({\n          type: 'LOGIN_ERROR',\n          loginError: user.user\n        });\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/actions/loginActions.js"],"names":["baseURL","usersURL","loginError","error","console","log","login","user","history","dispatch","fetch","mode","method","headers","body","JSON","stringify","then","response","json","type","result","undefined","push","id"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAhB;AACA,MAAMC,QAAQ,GAAG,QAAjB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,CAFD;;AAIA,OAAO,MAAMG,KAAK,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACtC,SAAQC,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAACV,OAAO,GAAGC,QAAX,EAAsB;AACzBU,MAAAA,IAAI,EAAE,MADmB;AAEzBC,MAAAA,MAAM,EAAE,MAFiB;AAGzBC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAHgB;AAOzBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBT,QAAAA;AADmB,OAAf;AAPmB,KAAtB,CAAL,CAWGU,IAXH,CAWQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAXpB,EAYGF,IAZH,CAYQV,IAAI,IAAI;AACZE,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAE,UADC;AAEPb,QAAAA;AAFO,OAAD,CAAR;AAIA,aAAOA,IAAP;AACD,KAlBH,EAmBGU,IAnBH,CAmBQV,IAAI,IAAI;AACZ,UAAGA,IAAI,CAACc,MAAL,KAAgBC,SAAnB,EAA8B;AAC5Bd,QAAAA,OAAO,CAACe,IAAR,mBAAwBhB,IAAI,CAACiB,EAA7B;AACD,OAFD,MAEO;AACLf,QAAAA,QAAQ,CAAC;AACPW,UAAAA,IAAI,EAAE,aADC;AAEPlB,UAAAA,UAAU,EAAEK,IAAI,CAACA;AAFV,SAAD,CAAR;AAID;AACF,KA5BH;AA6BD,GA9BD;AA+BD,CAhCM","sourcesContent":["const baseURL = 'http://localhost:3000'\nconst usersURL = '/users'\n\nconst loginError = (error) => {\n  console.log(error);\n}\n\nexport const login = (user, history) => {\n  return (dispatch) => {\n    fetch(baseURL + usersURL , {\n      mode: 'cors',\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        user\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        dispatch({\n          type: 'GET_USER',\n          user\n        })\n        return user\n      })\n      .then(user => {\n        if(user.result === undefined) {\n          history.push(`/images/${user.id}`)\n        } else {\n          dispatch({\n            type: 'LOGIN_ERROR',\n            loginError: user.user\n          })\n        }\n      })\n  };\n};\n"]},"metadata":{},"sourceType":"module"}