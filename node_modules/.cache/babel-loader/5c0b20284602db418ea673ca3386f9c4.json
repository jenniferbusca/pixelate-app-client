{"ast":null,"code":"const baseURL = 'http://localhost:3000';\nconst usersURL = '/users';\nexport const login = user => {\n  debugger;\n  return dispatch => {\n    fetch(baseURL + usersURL, {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: user.email,\n        password: user.password\n      })\n    }).then(response => response.json()).then(image => {\n      dispatch({\n        type: 'GET_USER',\n        user\n      });\n    }).catch(error => console.log(error));\n  };\n};","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/actions/loginActions.js"],"names":["baseURL","usersURL","login","user","dispatch","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","image","type","catch","error","console","log"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAhB;AACA,MAAMC,QAAQ,GAAG,QAAjB;AAEA,OAAO,MAAMC,KAAK,GAAIC,IAAD,IAAU;AAC7B;AACA,SAAQC,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAACL,OAAO,GAAGC,QAAX,EAAqB;AACxBK,MAAAA,MAAM,EAAE,MADgB;AAExBC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAFe;AAMxBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,KAAK,EAAER,IAAI,CAACQ,KADO;AAEnBC,QAAAA,QAAQ,EAAET,IAAI,CAACS;AAFI,OAAf;AANkB,KAArB,CAAL,CAWGC,IAXH,CAWQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAXpB,EAYGF,IAZH,CAYQG,KAAK,IAAI;AACbZ,MAAAA,QAAQ,CAAC;AACPa,QAAAA,IAAI,EAAE,UADC;AAEPd,QAAAA;AAFO,OAAD,CAAR;AAID,KAjBH,EAkBGe,KAlBH,CAkBSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAlBlB;AAmBD,GApBD;AAqBD,CAvBM","sourcesContent":["const baseURL = 'http://localhost:3000'\nconst usersURL = '/users'\n\nexport const login = (user) => {\n  debugger\n  return (dispatch) => {\n    fetch(baseURL + usersURL, {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: user.email,\n        password: user.password\n      })\n    })\n      .then(response => response.json())\n      .then(image => {\n        dispatch({\n          type: 'GET_USER',\n          user\n        })\n      })\n      .catch(error => console.log(error))\n  };\n}\n"]},"metadata":{},"sourceType":"module"}