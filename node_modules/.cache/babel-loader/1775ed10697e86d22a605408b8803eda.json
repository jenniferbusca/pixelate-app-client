{"ast":null,"code":"var _jsxFileName = \"/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImagesContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchImages } from '../../actions/imageActions';\nimport ImageList from './ImageList';\nimport ImageContainer from './ImageContainer';\n\nclass ImagesContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoadingImages = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, \"Loading Images...\"));\n      } else {\n        return React.createElement(ImageList, {\n          images: this.props.images,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.handleLoadingImage = () => {\n      const image = this.props.images.find(image => image.id.toString() === this.props.location.pathname.slice(7, 11));\n\n      if (image) {\n        return React.createElement(ImageContainer, {\n          images: this.props.images,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"Click on an image to load editor\"));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchImages(this.props.user);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.handleLoadingImages()), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.handleLoadingImage())));\n  }\n\n} //inline (mapStateToProps, mapDispatchToProps)\n\n\nexport default connect(state => ({\n  images: state.imagesReducer.images,\n  user: state.loginReducer.user\n}), {\n  fetchImages\n})(ImagesContainer);","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImagesContainer.js"],"names":["React","Component","connect","fetchImages","ImageList","ImageContainer","ImagesContainer","handleLoadingImages","props","loading","images","handleLoadingImage","image","find","id","toString","location","pathname","slice","componentDidMount","user","render","state","imagesReducer","loginReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAMtCM,mBANsC,GAMhB,MAAM;AAC1B,UAAG,KAAKC,KAAL,CAAWC,OAAd,EAAuB;AACrB,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CADF;AAKD,OAND,MAMO;AACL,eAAO,oBAAC,SAAD;AAAW,UAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KAhBqC;;AAAA,SAkBtCC,kBAlBsC,GAkBjB,MAAM;AACzB,YAAMC,KAAK,GAAG,KAAKJ,KAAL,CAAWE,MAAX,CAAkBG,IAAlB,CAAuBD,KAAK,IAAIA,KAAK,CAACE,EAAN,CAASC,QAAT,OAAwB,KAAKP,KAAL,CAAWQ,QAAX,CAAoBC,QAApB,CAA6BC,KAA7B,CAAmC,CAAnC,EAAsC,EAAtC,CAAxD,CAAd;;AACA,UAAGN,KAAH,EAAU;AACR,eAAO,oBAAC,cAAD;AAAgB,UAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWE,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAEO;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAL,CADF;AAGD;AACF,KA3BqC;AAAA;;AAEtCS,EAAAA,iBAAiB,GAAG;AAClB,SAAKX,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWY,IAAlC;AACD;;AAyBDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKd,mBAAL,EADH,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKI,kBAAL,EADH,CAJF,CADF,CADF;AAYD;;AA1CqC,C,CA6CxC;;;AACA,eAAeT,OAAO,CACpBoB,KAAK,KAAK;AACRZ,EAAAA,MAAM,EAAEY,KAAK,CAACC,aAAN,CAAoBb,MADpB;AAERU,EAAAA,IAAI,EAAEE,KAAK,CAACE,YAAN,CAAmBJ;AAFjB,CAAL,CADe,EAKtB;AAAEjB,EAAAA;AAAF,CALsB,CAAP,CAKEG,eALF,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchImages } from '../../actions/imageActions'\nimport ImageList from './ImageList'\nimport ImageContainer from './ImageContainer'\n\nclass ImagesContainer extends Component {\n\n  componentDidMount() {\n    this.props.fetchImages(this.props.user)\n  }\n\n  handleLoadingImages = () => {\n    if(this.props.loading) {\n      return (\n        <div>\n          <p>Loading Images...</p>\n        </div>\n      )\n    } else {\n      return <ImageList images={this.props.images} />\n    }\n  }\n\n  handleLoadingImage = () => {\n    const image = this.props.images.find(image => image.id.toString() === this.props.location.pathname.slice(7, 11))\n    if(image) {\n      return <ImageContainer images={this.props.images} />\n    } else {\n      return (\n        <div><p>Click on an image to load editor</p></div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-2\">\n            {this.handleLoadingImages()}\n          </div>\n          <div className=\"col\">\n            {this.handleLoadingImage()}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n//inline (mapStateToProps, mapDispatchToProps)\nexport default connect(\n  state => ({\n    images: state.imagesReducer.images,\n    user: state.loginReducer.user\n  }),\n{ fetchImages })(ImagesContainer);\n"]},"metadata":{},"sourceType":"module"}