{"ast":null,"code":"const baseURL = 'http://localhost:3000';\nconst usersURL = '/users';\n\nconst handleErrors = response => {\n  if (!response.ok) throw Error(response.status);\n  console.log(response);\n};\n\nexport const login = (user, history) => {\n  return dispatch => {\n    fetch(baseURL + usersURL, {\n      mode: 'cors',\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(response => response.json()).then(user => {\n      dispatch({\n        type: 'GET_USER',\n        user\n      });\n      return user;\n    }).then(user => {\n      if (user.result === undefined) {\n        history.push(\"/images/\".concat(user.id));\n      } else {\n        this.handleErrors(user.user);\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/actions/loginActions.js"],"names":["baseURL","usersURL","handleErrors","response","ok","Error","status","console","log","login","user","history","dispatch","fetch","mode","method","headers","body","JSON","stringify","then","json","type","result","undefined","push","id"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAhB;AACA,MAAMC,QAAQ,GAAG,QAAjB;;AAEA,MAAMC,YAAY,GAAIC,QAAD,IAAc;AACjC,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB,MAAMC,KAAK,CAACF,QAAQ,CAACG,MAAV,CAAX;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACD,CAHD;;AAKA,OAAO,MAAMM,KAAK,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACtC,SAAQC,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAACb,OAAO,GAAGC,QAAX,EAAsB;AACzBa,MAAAA,IAAI,EAAE,MADmB;AAEzBC,MAAAA,MAAM,EAAE,MAFiB;AAGzBC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAHgB;AAOzBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBT,QAAAA;AADmB,OAAf;AAPmB,KAAtB,CAAL,CAWGU,IAXH,CAWQjB,QAAQ,IAAIA,QAAQ,CAACkB,IAAT,EAXpB,EAYGD,IAZH,CAYQV,IAAI,IAAI;AACZE,MAAAA,QAAQ,CAAC;AACPU,QAAAA,IAAI,EAAE,UADC;AAEPZ,QAAAA;AAFO,OAAD,CAAR;AAIA,aAAOA,IAAP;AACD,KAlBH,EAmBGU,IAnBH,CAmBQV,IAAI,IAAI;AACZ,UAAGA,IAAI,CAACa,MAAL,KAAgBC,SAAnB,EAA8B;AAC5Bb,QAAAA,OAAO,CAACc,IAAR,mBAAwBf,IAAI,CAACgB,EAA7B;AACD,OAFD,MAEM;AACJ,aAAKxB,YAAL,CAAkBQ,IAAI,CAACA,IAAvB;AACD;AACF,KAzBH;AA0BD,GA3BD;AA4BD,CA7BM","sourcesContent":["const baseURL = 'http://localhost:3000'\nconst usersURL = '/users'\n\nconst handleErrors = (response) => {\n  if (!response.ok) throw Error(response.status);\n  console.log(response);\n}\n\nexport const login = (user, history) => {\n  return (dispatch) => {\n    fetch(baseURL + usersURL , {\n      mode: 'cors',\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        user\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        dispatch({\n          type: 'GET_USER',\n          user\n        })\n        return user\n      })\n      .then(user => {\n        if(user.result === undefined) {\n          history.push(`/images/${user.id}`)\n        } else{\n          this.handleErrors(user.user)\n        }\n      })\n  };\n};\n"]},"metadata":{},"sourceType":"module"}