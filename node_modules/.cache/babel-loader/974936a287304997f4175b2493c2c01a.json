{"ast":null,"code":"import _defineProperty from \"/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst imagesReducer = (state = {\n  images: [],\n  loading: false,\n  currentImage: \"\"\n}, action) => {\n  switch (action.type) {\n    case 'LOADING_IMAGES':\n      return _objectSpread({}, state, {\n        images: [...state.images],\n        loading: true\n      });\n\n    case 'DISPLAY_IMAGES':\n      return _objectSpread({}, state, {\n        images: action.images,\n        loading: false\n      });\n\n    case 'CREATE_IMAGES':\n      return _objectSpread({}, state, {\n        images: [...state.images, action.image],\n        loading: false\n      });\n\n    case 'UPDATE_IMAGE':\n      debugger;\n      return _objectSpread({}, state, {\n        images: state.images.map(image => image.id === action.image.data.id ? _objectSpread({}, image, {\n          image: action.image.data\n        }) : image)\n      });\n\n    case 'REMOVE_IMAGE':\n      const images = state.images.filter(image => image.id !== action.id);\n      return _objectSpread({}, state, {\n        images,\n        loading: false\n      });\n\n    case 'CURRENT_IMAGE':\n      return _objectSpread({}, state, {\n        currentImage: action.image\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default imagesReducer;","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/reducers/imagesReducer.js"],"names":["imagesReducer","state","images","loading","currentImage","action","type","image","map","id","data","filter"],"mappings":";;;;;;AAAA,MAAMA,aAAa,GAAG,CAACC,KAAK,GAAG;AAC7BC,EAAAA,MAAM,EAAE,EADqB;AAE7BC,EAAAA,OAAO,EAAE,KAFoB;AAG7BC,EAAAA,YAAY,EAAE;AAHe,CAAT,EAInBC,MAJmB,KAIR;AACZ,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,gBAAL;AACE,+BACKL,KADL;AAEEC,QAAAA,MAAM,EAAE,CAAC,GAAGD,KAAK,CAACC,MAAV,CAFV;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAK,gBAAL;AACE,+BACKF,KADL;AAEEC,QAAAA,MAAM,EAAEG,MAAM,CAACH,MAFjB;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAK,eAAL;AACE,+BACKF,KADL;AAEEC,QAAAA,MAAM,EAAE,CAAC,GAAGD,KAAK,CAACC,MAAV,EAAkBG,MAAM,CAACE,KAAzB,CAFV;AAGEJ,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAK,cAAL;AACA;AACE,+BACOF,KADP;AAEIC,QAAAA,MAAM,EAAED,KAAK,CAACC,MAAN,CAAaM,GAAb,CAAiBD,KAAK,IAAIA,KAAK,CAACE,EAAN,KAAaJ,MAAM,CAACE,KAAP,CAAaG,IAAb,CAAkBD,EAA/B,qBAC3BF,KAD2B;AACpBA,UAAAA,KAAK,EAAEF,MAAM,CAACE,KAAP,CAAaG;AADA,aAEhCH,KAFM;AAFZ;;AAOF,SAAK,cAAL;AACE,YAAML,MAAM,GAAGD,KAAK,CAACC,MAAN,CAAaS,MAAb,CAAoBJ,KAAK,IAAIA,KAAK,CAACE,EAAN,KAAaJ,MAAM,CAACI,EAAjD,CAAf;AACA,+BACKR,KADL;AAEEC,QAAAA,MAFF;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAK,eAAL;AACE,+BACKF,KADL;AAEEG,QAAAA,YAAY,EAAEC,MAAM,CAACE;AAFvB;;AAIF;AACE,aAAON,KAAP;AAzCJ;AA2CD,CAhDD;;AAkDA,eAAeD,aAAf","sourcesContent":["const imagesReducer = (state = {\n  images: [],\n  loading: false,\n  currentImage: \"\"\n}, action) => {\n  switch(action.type) {\n    case 'LOADING_IMAGES':\n      return {\n        ...state,\n        images: [...state.images],\n        loading: true\n      }\n    case 'DISPLAY_IMAGES':\n      return {\n        ...state,\n        images: action.images,\n        loading: false\n      }\n    case 'CREATE_IMAGES':\n      return {\n        ...state,\n        images: [...state.images, action.image],\n        loading: false\n      }\n    case 'UPDATE_IMAGE':\n    debugger\n      return {\n          ...state,\n          images: state.images.map(image => image.id === action.image.data.id ?\n            { ...image, image: action.image.data} :\n            image\n          )\n      };\n    case 'REMOVE_IMAGE':\n      const images = state.images.filter(image => image.id !== action.id);\n      return {\n        ...state,\n        images,\n        loading: false\n      }\n    case 'CURRENT_IMAGE':\n      return {\n        ...state,\n        currentImage: action.image\n      }\n    default:\n      return state;\n  }\n}\n\nexport default imagesReducer;\n"]},"metadata":{},"sourceType":"module"}