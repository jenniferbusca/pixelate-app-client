{"ast":null,"code":"var _jsxFileName = \"/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImageContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { removeImage } from '../../actions/imageActions';\nimport ShowImage from './ShowImage';\nimport ImageFilters from './ImageFilters';\n\nclass ImageContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleRemove = () => {\n      this.props.removeImage(this.props.match.params.id, this.props.user.id, this.props.history);\n    };\n\n    this.handleFilterChange = e => {\n      console.log(e.target);\n      this.setState({\n        selectedImageFilter: e.target.value\n      });\n    };\n\n    this.state = {\n      imageId: this.props.match.params.id,\n      selectedImageFilter: null\n    };\n  }\n\n  render() {\n    let image = this.props.images.filter(image => image.id.toString() === this.state.imageId)[0];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(ShowImage, {\n      image: image,\n      selectedImageFilter: this.state.selectedImageFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(ImageFilters, {\n      handleFilterChange: this.handleFilterChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: handleRemove => this.handleRemove(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Remove Image\"));\n  }\n\n}\n\n;\nexport default connect(state => ({\n  images: state.imagesReducer.images,\n  user: state.loginReducer.user\n}), {\n  removeImage\n})(ImageContainer);","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImageContainer.js"],"names":["React","Component","connect","removeImage","ShowImage","ImageFilters","ImageContainer","constructor","props","handleRemove","match","params","id","user","history","handleFilterChange","e","console","log","target","setState","selectedImageFilter","value","state","imageId","render","image","images","filter","toString","imagesReducer","loginReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AACrCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,YARmB,GAQJ,MAAM;AACnB,WAAKD,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C,EAAmD,KAAKJ,KAAL,CAAWK,IAAX,CAAgBD,EAAnE,EAAuE,KAAKJ,KAAL,CAAWM,OAAlF;AACD,KAVkB;;AAAA,SAYnBC,kBAZmB,GAYGC,CAAD,IAAO;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,mBAAmB,EAAEL,CAAC,CAACG,MAAF,CAASG;AAAhC,OAAd;AACD,KAfkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EADtB;AAEXS,MAAAA,mBAAmB,EAAE;AAFV,KAAb;AAID;;AAWDI,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAK,GAAG,KAAKlB,KAAL,CAAWmB,MAAX,CAAkBC,MAAlB,CAAyBF,KAAK,IAAIA,KAAK,CAACd,EAAN,CAASiB,QAAT,OAAwB,KAAKN,KAAL,CAAWC,OAArE,EAA8E,CAA9E,CAAZ;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEE,KAAlB;AAAyB,MAAA,mBAAmB,EAAE,KAAKH,KAAL,CAAWF,mBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,YAAD;AAAc,MAAA,kBAAkB,EAAE,KAAKN,kBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,OAAO,EAAEN,YAAY,IAAI,KAAKA,YAAL,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,CADF;AAOD;;AA3BoC;;AA4BtC;AAED,eAAeP,OAAO,CACpBqB,KAAK,KAAK;AACRI,EAAAA,MAAM,EAAEJ,KAAK,CAACO,aAAN,CAAoBH,MADpB;AAERd,EAAAA,IAAI,EAAEU,KAAK,CAACQ,YAAN,CAAmBlB;AAFjB,CAAL,CADe,EAKpB;AAAEV,EAAAA;AAAF,CALoB,CAAP,CAKIG,cALJ,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { removeImage } from '../../actions/imageActions';\nimport ShowImage from './ShowImage';\nimport ImageFilters from './ImageFilters';\n\nclass ImageContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageId: this.props.match.params.id,\n      selectedImageFilter: null\n    };\n  };\n\n  handleRemove = () => {\n    this.props.removeImage(this.props.match.params.id, this.props.user.id, this.props.history)\n  }\n\n  handleFilterChange = (e) => {\n    console.log(e.target);\n    this.setState({ selectedImageFilter: e.target.value });\n  }\n\n  render() {\n    let image = this.props.images.filter(image => image.id.toString() === this.state.imageId)[0]\n    return (\n      <div>\n        <ShowImage image={image} selectedImageFilter={this.state.selectedImageFilter} />\n        <ImageFilters handleFilterChange={this.handleFilterChange} />\n        <button onClick={handleRemove => this.handleRemove()}>Remove Image</button>\n      </div>\n    );\n  }\n};\n\nexport default connect(\n  state => ({\n    images: state.imagesReducer.images,\n    user: state.loginReducer.user\n  }),\n  { removeImage })(ImageContainer);\n"]},"metadata":{},"sourceType":"module"}