{"ast":null,"code":"export function login(email, password) {\n  return dispatch => {\n    dispatch(setLoginPending(true));\n    dispatch(setLoginSuccess(false));\n    dispatch(setLoginError(null));\n    callLoginApi(email, password, error => {\n      dispatch(setLoginPending(false));\n\n      if (!error) {\n        dispatch(setLoginSuccess(true));\n      } else {\n        dispatch(setLoginError(error));\n      }\n    });\n  };\n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: SET_LOGIN_ERROR,\n    loginError\n  };\n}\n\nfunction callLoginApi(email, password, callback) {\n  setTimeout(() => {\n    if (email === 'admin@example.com' && password === 'admin') {\n      return callback(null);\n    } else {\n      return callback(new Error('Invalid email and password'));\n    }\n  }, 1000);\n}","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/actions/loginActions.js"],"names":["login","email","password","dispatch","setLoginPending","setLoginSuccess","setLoginError","callLoginApi","error","isLoginPending","type","SET_LOGIN_PENDING","isLoginSuccess","SET_LOGIN_SUCCESS","loginError","SET_LOGIN_ERROR","callback","setTimeout","Error"],"mappings":"AAAA,OAAO,SAASA,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAAgC;AACrC,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACC,eAAe,CAAC,IAAD,CAAhB,CAAR;AACAD,IAAAA,QAAQ,CAACE,eAAe,CAAC,KAAD,CAAhB,CAAR;AACAF,IAAAA,QAAQ,CAACG,aAAa,CAAC,IAAD,CAAd,CAAR;AAEAC,IAAAA,YAAY,CAACN,KAAD,EAAQC,QAAR,EAAkBM,KAAK,IAAI;AACrCL,MAAAA,QAAQ,CAACC,eAAe,CAAC,KAAD,CAAhB,CAAR;;AACA,UAAI,CAACI,KAAL,EAAY;AACVL,QAAAA,QAAQ,CAACE,eAAe,CAAC,IAAD,CAAhB,CAAR;AACD,OAFD,MAEO;AACLF,QAAAA,QAAQ,CAACG,aAAa,CAACE,KAAD,CAAd,CAAR;AACD;AACF,KAPW,CAAZ;AAQD,GAbD;AAcD;;AAED,SAASJ,eAAT,CAAyBK,cAAzB,EAAyC;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAEC,iBADD;AAELF,IAAAA;AAFK,GAAP;AAID;;AAED,SAASJ,eAAT,CAAyBO,cAAzB,EAAyC;AACvC,SAAO;AACLF,IAAAA,IAAI,EAAEG,iBADD;AAELD,IAAAA;AAFK,GAAP;AAID;;AAED,SAASN,aAAT,CAAuBQ,UAAvB,EAAmC;AACjC,SAAO;AACLJ,IAAAA,IAAI,EAAEK,eADD;AAELD,IAAAA;AAFK,GAAP;AAID;;AAED,SAASP,YAAT,CAAsBN,KAAtB,EAA6BC,QAA7B,EAAuCc,QAAvC,EAAiD;AAC/CC,EAAAA,UAAU,CAAC,MAAM;AACf,QAAIhB,KAAK,KAAK,mBAAV,IAAiCC,QAAQ,KAAK,OAAlD,EAA2D;AACzD,aAAOc,QAAQ,CAAC,IAAD,CAAf;AACD,KAFD,MAEO;AACL,aAAOA,QAAQ,CAAC,IAAIE,KAAJ,CAAU,4BAAV,CAAD,CAAf;AACD;AACF,GANS,EAMP,IANO,CAAV;AAOD","sourcesContent":["export function login(email, password) {\n  return dispatch => {\n    dispatch(setLoginPending(true));\n    dispatch(setLoginSuccess(false));\n    dispatch(setLoginError(null));\n\n    callLoginApi(email, password, error => {\n      dispatch(setLoginPending(false));\n      if (!error) {\n        dispatch(setLoginSuccess(true));\n      } else {\n        dispatch(setLoginError(error));\n      }\n    });\n  }\n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: SET_LOGIN_ERROR,\n    loginError\n  }\n}\n\nfunction callLoginApi(email, password, callback) {\n  setTimeout(() => {\n    if (email === 'admin@example.com' && password === 'admin') {\n      return callback(null);\n    } else {\n      return callback(new Error('Invalid email and password'));\n    }\n  }, 1000);\n}\n"]},"metadata":{},"sourceType":"module"}