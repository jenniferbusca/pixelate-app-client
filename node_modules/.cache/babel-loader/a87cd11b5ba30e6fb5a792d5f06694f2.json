{"ast":null,"code":"var _jsxFileName = \"/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImageContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { saveImage, removeImage } from '../../actions/imageActions';\nimport ShowImage from './ShowImage';\nimport ImageFilters from './ImageFilters';\n\nclass ImageContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSave = () => {\n      this.props.saveImage(this.props.currentImage, this.state.selectedImageFilter);\n    };\n\n    this.handleRemove = () => {\n      this.props.removeImage(this.props.currentImage.id, this.props.user.id, this.props.history);\n    };\n\n    this.handleFilterChange = e => {\n      const filter = e.target.value;\n      this.setState({\n        selectedImageFilter: filter === \"none\" ? null : filter\n      });\n    };\n\n    this.state = {\n      selectedImageFilter: this.props.currentImage.transformations\n    };\n  }\n\n  render() {\n    const currentImage = this.props.currentImage;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(ShowImage, {\n      image: currentImage,\n      selectedImageFilter: this.state.selectedImageFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(ImageFilters, {\n      handleFilterChange: this.handleFilterChange,\n      selectedImageFilter: this.state.selectedImageFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: handleSave => this.handleSave(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Save Image\"), React.createElement(\"button\", {\n      onClick: handleRemove => this.handleRemove(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Remove Image\"));\n  }\n\n}\n\n;\nexport default connect(state => ({\n  images: state.imagesReducer.images,\n  user: state.loginReducer.user,\n  currentImage: state.imagesReducer.currentImage\n}), {\n  saveImage,\n  removeImage\n})(ImageContainer);","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImageContainer.js"],"names":["React","Component","connect","saveImage","removeImage","ShowImage","ImageFilters","ImageContainer","constructor","props","handleSave","currentImage","state","selectedImageFilter","handleRemove","id","user","history","handleFilterChange","e","filter","target","value","setState","transformations","render","images","imagesReducer","loginReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,4BAAvC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,cAAN,SAA6BN,SAA7B,CAAuC;AACrCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,UAPmB,GAON,MAAM;AACjB,WAAKD,KAAL,CAAWN,SAAX,CAAqB,KAAKM,KAAL,CAAWE,YAAhC,EAA8C,KAAKC,KAAL,CAAWC,mBAAzD;AACD,KATkB;;AAAA,SAWnBC,YAXmB,GAWJ,MAAM;AACnB,WAAKL,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWE,YAAX,CAAwBI,EAA/C,EAAmD,KAAKN,KAAL,CAAWO,IAAX,CAAgBD,EAAnE,EAAuE,KAAKN,KAAL,CAAWQ,OAAlF;AACD,KAbkB;;AAAA,SAenBC,kBAfmB,GAeGC,CAAD,IAAO;AAC1B,YAAMC,MAAM,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAxB;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,mBAAmB,EAAEO,MAAM,KAAK,MAAX,GAAoB,IAApB,GAA2BA;AAAlD,OAAd;AACD,KAlBkB;;AAEjB,SAAKR,KAAL,GAAa;AACXC,MAAAA,mBAAmB,EAAE,KAAKJ,KAAL,CAAWE,YAAX,CAAwBa;AADlC,KAAb;AAGD;;AAeDC,EAAAA,MAAM,GAAG;AAAA,UACCd,YADD,GACkB,KAAKF,KADvB,CACCE,YADD;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEA,YAAlB;AAAgC,MAAA,mBAAmB,EAAE,KAAKC,KAAL,CAAWC,mBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,YAAD;AAAc,MAAA,kBAAkB,EAAE,KAAKK,kBAAvC;AAA2D,MAAA,mBAAmB,EAAE,KAAKN,KAAL,CAAWC,mBAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,OAAO,EAAEH,UAAU,IAAI,KAAKA,UAAL,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE;AAAQ,MAAA,OAAO,EAAEI,YAAY,IAAI,KAAKA,YAAL,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,CADF;AAQD;;AA/BoC;;AAgCtC;AAED,eAAeZ,OAAO,CACpBU,KAAK,KAAK;AACRc,EAAAA,MAAM,EAAEd,KAAK,CAACe,aAAN,CAAoBD,MADpB;AAERV,EAAAA,IAAI,EAAEJ,KAAK,CAACgB,YAAN,CAAmBZ,IAFjB;AAGRL,EAAAA,YAAY,EAAEC,KAAK,CAACe,aAAN,CAAoBhB;AAH1B,CAAL,CADe,EAMpB;AAAER,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CANoB,CAAP,CAMeG,cANf,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { saveImage, removeImage } from '../../actions/imageActions';\nimport ShowImage from './ShowImage';\nimport ImageFilters from './ImageFilters';\n\nclass ImageContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedImageFilter: this.props.currentImage.transformations\n    };\n  };\n\n  handleSave = () => {\n    this.props.saveImage(this.props.currentImage, this.state.selectedImageFilter)\n  }\n\n  handleRemove = () => {\n    this.props.removeImage(this.props.currentImage.id, this.props.user.id, this.props.history)\n  }\n\n  handleFilterChange = (e) => {\n    const filter = e.target.value\n    this.setState({ selectedImageFilter: filter === \"none\" ? null : filter });\n  }\n\n  render() {\n    const { currentImage } = this.props;\n    return (\n      <div>\n        <ShowImage image={currentImage} selectedImageFilter={this.state.selectedImageFilter} />\n        <ImageFilters handleFilterChange={this.handleFilterChange} selectedImageFilter={this.state.selectedImageFilter}/>\n        <button onClick={handleSave => this.handleSave()}>Save Image</button>\n        <button onClick={handleRemove => this.handleRemove()}>Remove Image</button>\n      </div>\n    );\n  }\n};\n\nexport default connect(\n  state => ({\n    images: state.imagesReducer.images,\n    user: state.loginReducer.user,\n    currentImage: state.imagesReducer.currentImage\n  }),\n  { saveImage, removeImage })(ImageContainer);\n"]},"metadata":{},"sourceType":"module"}