{"ast":null,"code":"var _jsxFileName = \"/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImagePage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { removeImage } from '../../actions/imageActions';\nimport { withRouter } from 'react-router-dom';\n\nclass ImagePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleRemove = () => {\n      debugger;\n      this.props.removeImage(this.props.match.params.id);\n    };\n\n    this.state = {\n      imageId: this.props.match.params.id\n    };\n  }\n\n  render() {\n    let image = this.props.images.filter(image => image.id.toString() === this.state.imageId);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"largeImage\",\n      key: image[0].id,\n      src: image[0].image_url,\n      alt: image[0].id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: handleRemove => this.handleRemove(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Remove Image\"));\n  }\n\n}\n\n;\nexport default connect(state => ({\n  images: state.imagesReducer.images,\n  user: state.loginReducer.user\n}), {\n  removeImage\n})(withRouter(ImagePage));","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/components/Images/ImagePage.js"],"names":["React","Component","connect","removeImage","withRouter","ImagePage","constructor","props","handleRemove","match","params","id","state","imageId","render","image","images","filter","toString","image_url","imagesReducer","user","loginReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,YAPmB,GAOJ,MAAM;AACnB;AACA,WAAKD,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD,KAVkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KAAKN,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC;AADtB,KAAb;AAGD;;AAODG,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAK,GAAG,KAAKR,KAAL,CAAWS,MAAX,CAAkBC,MAAlB,CAAyBF,KAAK,IAAIA,KAAK,CAACJ,EAAN,CAASO,QAAT,OAAwB,KAAKN,KAAL,CAAWC,OAArE,CAAZ;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,GAAG,EAAEE,KAAK,CAAC,CAAD,CAAL,CAASJ,EAFhB;AAGE,MAAA,GAAG,EAAEI,KAAK,CAAC,CAAD,CAAL,CAASI,SAHhB;AAIE,MAAA,GAAG,EAAEJ,KAAK,CAAC,CAAD,CAAL,CAASJ,EAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AAAQ,MAAA,OAAO,EAAEH,YAAY,IAAI,KAAKA,YAAL,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,CADF;AAWD;;AA1B+B;;AA2BjC;AAED,eAAeN,OAAO,CACpBU,KAAK,KAAK;AACRI,EAAAA,MAAM,EAAEJ,KAAK,CAACQ,aAAN,CAAoBJ,MADpB;AAERK,EAAAA,IAAI,EAAET,KAAK,CAACU,YAAN,CAAmBD;AAFjB,CAAL,CADe,EAKpB;AAAElB,EAAAA;AAAF,CALoB,CAAP,CAKIC,UAAU,CAACC,SAAD,CALd,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { removeImage } from '../../actions/imageActions';\nimport { withRouter } from 'react-router-dom';\n\nclass ImagePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageId: this.props.match.params.id\n    };\n  };\n\n  handleRemove = () => {\n    debugger\n    this.props.removeImage(this.props.match.params.id)\n  }\n\n  render() {\n    let image = this.props.images.filter(image => image.id.toString() === this.state.imageId)\n    return (\n      <div>\n        <img\n          className='largeImage'\n          key={image[0].id}\n          src={image[0].image_url}\n          alt={image[0].id}\n        />\n        <button onClick={handleRemove => this.handleRemove()}>Remove Image</button>\n      </div>\n    );\n  }\n};\n\nexport default connect(\n  state => ({\n    images: state.imagesReducer.images,\n    user: state.loginReducer.user\n  }),\n  { removeImage })(withRouter(ImagePage));\n"]},"metadata":{},"sourceType":"module"}