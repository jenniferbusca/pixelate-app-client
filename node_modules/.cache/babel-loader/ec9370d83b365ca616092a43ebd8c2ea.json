{"ast":null,"code":"const baseURL = 'http://localhost:3000';\nconst imageURL = '/images';\nimport ImageUploader from '../components/Images/ImageUploader';\nexport const fetchImages = () => {\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_IMAGES'\n    });\n    fetch(baseURL + imageURL).then(response => {\n      return response.json();\n    }).then(responseJSON => {\n      dispatch({\n        type: 'DISPLAY_IMAGES',\n        images: responseJSON.data.map(image => ({\n          id: image.id,\n          url: image.attributes.image_url\n        }))\n      });\n    });\n  };\n};\nexport const postImage = images => {\n  return dispatch => {\n    fetch(baseURL + imageURL, {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        images: image\n      })\n    }).then(response => response.json()).then(images => {\n      dispatch({\n        type: 'UPLOAD_IMAGES'\n      });\n    }).catch(error => console.log(error));\n  };\n};","map":{"version":3,"sources":["/Users/jennifer/Flatiron School/Projects/pixelate-app/pixel-app-client/src/actions/imageActions.js"],"names":["baseURL","imageURL","ImageUploader","fetchImages","dispatch","type","fetch","then","response","json","responseJSON","images","data","map","image","id","url","attributes","image_url","postImage","method","headers","body","JSON","stringify","catch","error","console","log"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAhB;AACA,MAAMC,QAAQ,GAAG,SAAjB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAC,IAAAA,KAAK,CAACN,OAAO,GAAGC,QAAX,CAAL,CACGM,IADH,CACQC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AAAuB,KAF3B,EAGGF,IAHH,CAGQG,YAAY,IAAI;AACtBN,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,gBADC;AAEPM,QAAAA,MAAM,EAAED,YAAY,CAACE,IAAb,CAAkBC,GAAlB,CACNC,KAAK,KACH;AAAEC,UAAAA,EAAE,EAACD,KAAK,CAACC,EAAX;AAAeC,UAAAA,GAAG,EAACF,KAAK,CAACG,UAAN,CAAiBC;AAApC,SADG,CADC;AAFD,OAAD,CAAR;AAQD,KAZD;AAaD,GAfD;AAgBD,CAjBM;AAmBP,OAAO,MAAMC,SAAS,GAAIR,MAAD,IAAY;AACnC,SAAQP,QAAD,IAAc;AACnBE,IAAAA,KAAK,CAACN,OAAO,GAAGC,QAAX,EAAqB;AACxBmB,MAAAA,MAAM,EAAE,MADgB;AAExBC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAFe;AAMxBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBb,QAAAA,MAAM,EAAEG;AADW,OAAf;AANkB,KAArB,CAAL,CAUGP,IAVH,CAUQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAVpB,EAWGF,IAXH,CAWQI,MAAM,IAAI;AACdP,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGD,KAfH,EAgBGoB,KAhBH,CAgBSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAhBlB;AAiBD,GAlBD;AAmBD,CApBM","sourcesContent":["const baseURL = 'http://localhost:3000'\nconst imageURL = '/images'\nimport ImageUploader from '../components/Images/ImageUploader'\n\nexport const fetchImages = () => {\n  return (dispatch) => {\n    dispatch({ type: 'LOADING_IMAGES'})\n    fetch(baseURL + imageURL)\n      .then(response => {\n        return response.json()})\n      .then(responseJSON => {\n      dispatch({\n        type: 'DISPLAY_IMAGES',\n        images: responseJSON.data.map(\n          image => (\n            { id:image.id, url:image.attributes.image_url}\n          ))\n        }\n      )\n    })\n  }\n}\n\nexport const postImage = (images) => {\n  return (dispatch) => {\n    fetch(baseURL + imageURL, {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        images: image\n      })\n    })\n      .then(response => response.json())\n      .then(images => {\n        dispatch({\n          type: 'UPLOAD_IMAGES'\n        })\n      })\n      .catch(error => console.log(error))\n  };\n}\n"]},"metadata":{},"sourceType":"module"}